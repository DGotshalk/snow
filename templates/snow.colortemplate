Author:          nightsense
Maintainer:      nightsense
License:         MIT
Full name:       snow
Short name:      snow
Terminal Colors: 256

Background: light
Color:      gry0 #eef2f8 ~
Color:      gry1 #dae2ee ~
Color:      gry2 #728199 ~
Color:      gry3 #4d5c72 ~
Color:      gryc #2a3749 ~
Color:      srch #e5bc5a ~
Color:      sprd #ff0000 196
Color:      spbl #0087ff 33
Color:      spcy #008787 30
Color:      spmg #d700d7 164
Color:      red_ #bc4f4b ~
Color:      gold #8d6e19 ~
Color:      gren #438138 ~
Color:      cyan #008685 ~
Color:      blue #007ad0 ~
Color:      mgnt #a8559e ~
Include:    _common.colortemplate

auxfile autoload/airline/themes/snow_light.vim
let g:airline#themes#snow_light#palette = {}

let s:gry0 = [ "@guigry0", @termgry0 ]
let s:gry1 = [ "@guigry1", @termgry1 ]
let s:gry3 = [ "@guigry3", @termgry3 ]
let s:red_ = [ "@guired_", @termred_ ]
let s:gren = [ "@guigren", @termgren ]
let s:blue = [ "@guiblue", @termblue ]

let s:nrm1 = [ s:gry0[0] , s:gry3[0] , s:gry0[1] , s:gry3[1] ]
let s:nrm2 = [ s:gry3[0] , s:gry1[0] , s:gry3[1] , s:gry1[1] ]
let s:insr = [ s:gry0[0] , s:gren[0] , s:gry0[1] , s:gren[1] ]
let s:visl = [ s:gry0[0] , s:blue[0] , s:gry0[1] , s:blue[1] ]
let s:rplc = [ s:gry0[0] , s:red_[0] , s:gry0[1] , s:red_[1] ]
let s:inac = [ s:gry3[0] , s:gry1[0] , s:gry3[1] , s:gry1[1] ]

let g:airline#themes#snow_light#palette.normal =
  \ airline#themes#generate_color_map( s:nrm1 , s:nrm2 , s:nrm2 )

let g:airline#themes#snow_light#palette.insert =
  \ airline#themes#generate_color_map( s:insr , s:nrm2 , s:nrm2 )

let g:airline#themes#snow_light#palette.visual =
  \ airline#themes#generate_color_map( s:visl , s:nrm2 , s:nrm2 )

let g:airline#themes#snow_light#palette.replace =
  \ airline#themes#generate_color_map( s:rplc , s:nrm2 , s:nrm2 )

let g:airline#themes#snow_light#palette.inactive =
  \ airline#themes#generate_color_map( s:inac , s:inac , s:inac )

let g:airline#themes#snow_light#palette.ctrlp =
  \ airline#extensions#ctrlp#generate_color_map( s:nrm2 , s:nrm1 , s:nrm2 )
endauxfile
auxfile autoload/lightline/colorscheme/snow_light.vim
let s:gry0 = [ "@guigry0", @termgry0 ]
let s:gry1 = [ "@guigry1", @termgry1 ]
let s:gry3 = [ "@guigry3", @termgry3 ]
let s:red_ = [ "@guired_", @termred_ ]
let s:mgnt = [ "@guimgnt", @termmgnt ]
let s:gren = [ "@guigren", @termgren ]
let s:blue = [ "@guiblue", @termblue ]

let s:p = { "normal" : {} , "inactive": {} , "insert"  : {} ,
          \ "replace": {} , "visual"  : {} , "tabline" : {} }

let s:p.normal.left     = [[ s:gry0, s:gry3 ], [ s:gry3, s:gry1 ]]
let s:p.normal.middle   = [[ s:gry3, s:gry1 ]]
let s:p.normal.right    = [[ s:gry0, s:gry3 ], [ s:gry0, s:gry3 ]]

let s:p.inactive.left   = copy(s:p.normal.middle)
let s:p.inactive.middle = copy(s:p.normal.middle)
let s:p.inactive.right  = copy(s:p.normal.middle)

let s:p.insert.left     = [[ s:gry0, s:gren ]]
let s:p.insert.right    = [[ s:gry0, s:gren ], [ s:gry0, s:gren ]]

let s:p.visual.left     = [[ s:gry0, s:blue ]]
let s:p.visual.right    = [[ s:gry0, s:blue ], [ s:gry0, s:blue ]]

let s:p.replace.left    = [[ s:gry0, s:red_ ]]
let s:p.replace.right   = [[ s:gry0, s:red_ ], [ s:gry0, s:red_ ]]

let s:p.tabline.left    = copy(s:p.normal.middle)
let s:p.tabline.tabsel  = [[ s:gry0, s:gren ]]
let s:p.tabline.right   = copy(s:p.normal.middle)

let s:p.normal.error    = [[ s:red_, s:gry0 ]]
let s:p.normal.warning  = [[ s:mgnt, s:gry0 ]]

let g:lightline#colorscheme#snow_light#palette =
  \ lightline#colorscheme#flatten(s:p)
endauxfile

Background: dark
Color:      gry0 #222e3d ~
Color:      gry1 #2a3749 ~
Color:      gry2 #728199 ~
Color:      gry3 #9dadc5 ~
Color:      gryc #dae2ee ~
Color:      sprd #ff5f5f 203
Color:      spbl #5fafff 75
Color:      spcy #00afaf 37
Color:      spmg #d75fd7 170
Color:      srch #95638e ~
Color:      red_ #c1867f ~
Color:      gold #a6936c ~
Color:      gren #829d7a ~
Color:      cyan #6c9f9d ~
Color:      blue #7299ca ~
Color:      mgnt #b289ab ~
Include:    _common.colortemplate

auxfile autoload/airline/themes/snow_dark.vim
let g:airline#themes#snow_dark#palette = {}

let s:gry0 = [ "@guigry0", @termgry0 ]
let s:gry1 = [ "@guigry1", @termgry1 ]
let s:gry3 = [ "@guigry3", @termgry3 ]
let s:red_ = [ "@guired_", @termred_ ]
let s:gren = [ "@guigren", @termgren ]
let s:blue = [ "@guiblue", @termblue ]

let s:nrm1 = [ s:gry0[0] , s:gry3[0] , s:gry0[1] , s:gry3[1] ]
let s:nrm2 = [ s:gry3[0] , s:gry1[0] , s:gry3[1] , s:gry1[1] ]
let s:insr = [ s:gry0[0] , s:gren[0] , s:gry0[1] , s:gren[1] ]
let s:visl = [ s:gry0[0] , s:blue[0] , s:gry0[1] , s:blue[1] ]
let s:rplc = [ s:gry0[0] , s:red_[0] , s:gry0[1] , s:red_[1] ]
let s:inac = [ s:gry3[0] , s:gry1[0] , s:gry3[1] , s:gry1[1] ]

let g:airline#themes#snow_dark#palette.normal =
  \ airline#themes#generate_color_map( s:nrm1 , s:nrm2 , s:nrm2 )

let g:airline#themes#snow_dark#palette.insert =
  \ airline#themes#generate_color_map( s:insr , s:nrm2 , s:nrm2 )

let g:airline#themes#snow_dark#palette.visual =
  \ airline#themes#generate_color_map( s:visl , s:nrm2 , s:nrm2 )

let g:airline#themes#snow_dark#palette.replace =
  \ airline#themes#generate_color_map( s:rplc , s:nrm2 , s:nrm2 )

let g:airline#themes#snow_dark#palette.inactive =
  \ airline#themes#generate_color_map( s:inac , s:inac , s:inac )

let g:airline#themes#snow_dark#palette.ctrlp =
  \ airline#extensions#ctrlp#generate_color_map( s:nrm2 , s:nrm1 , s:nrm2 )
endauxfile
auxfile autoload/lightline/colorscheme/snow_dark.vim
let s:gry0 = [ "@guigry0", @termgry0 ]
let s:gry1 = [ "@guigry1", @termgry1 ]
let s:gry3 = [ "@guigry3", @termgry3 ]
let s:red_ = [ "@guired_", @termred_ ]
let s:mgnt = [ "@guimgnt", @termmgnt ]
let s:gren = [ "@guigren", @termgren ]
let s:blue = [ "@guiblue", @termblue ]

let s:p = { "normal" : {} , "inactive": {} , "insert"  : {} ,
          \ "replace": {} , "visual"  : {} , "tabline" : {} }

let s:p.normal.left     = [[ s:gry0, s:gry3 ], [ s:gry3, s:gry1 ]]
let s:p.normal.middle   = [[ s:gry3, s:gry1 ]]
let s:p.normal.right    = [[ s:gry0, s:gry3 ], [ s:gry0, s:gry3 ]]

let s:p.inactive.left   = copy(s:p.normal.middle)
let s:p.inactive.middle = copy(s:p.normal.middle)
let s:p.inactive.right  = copy(s:p.normal.middle)

let s:p.insert.left     = [[ s:gry0, s:gren ]]
let s:p.insert.right    = [[ s:gry0, s:gren ], [ s:gry0, s:gren ]]

let s:p.visual.left     = [[ s:gry0, s:blue ]]
let s:p.visual.right    = [[ s:gry0, s:blue ], [ s:gry0, s:blue ]]

let s:p.replace.left    = [[ s:gry0, s:red_ ]]
let s:p.replace.right   = [[ s:gry0, s:red_ ], [ s:gry0, s:red_ ]]

let s:p.tabline.left    = copy(s:p.normal.middle)
let s:p.tabline.tabsel  = [[ s:gry0, s:gren ]]
let s:p.tabline.right   = copy(s:p.normal.middle)

let s:p.normal.error    = [[ s:red_, s:gry0 ]]
let s:p.normal.warning  = [[ s:mgnt, s:gry0 ]]

let g:lightline#colorscheme#snow_dark#palette =
  \ lightline#colorscheme#flatten(s:p)
endauxfile
